{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Setting.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth-guard.service.ts","./src/app/edit/edit.component.ts","./src/app/edit/edit.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/insert/insert.component.ts","./src/app/insert/insert.component.html","./src/app/nav/Menu.ts","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/share.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Setting{\n    Id:number;\n    Key:string;\n    Value:string;\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Settings';\n}\n","<section class=\"content\">\n  <div class=\"box\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HomeComponent } from \"./home/home.component\";\nimport { InsertComponent } from \"./insert/insert.component\";\nimport { EditComponent } from \"./edit/edit.component\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShareService } from \"./share.service\";\nimport { NavComponent } from \"./nav/nav.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst appRoutes: Routes = [\n  { path: \"home\", component: HomeComponent,canActivate:[AuthGuardService]},\n  { path: \"edit\", component: EditComponent,canActivate:[AuthGuardService]},\n  { path: \"insert\", component: InsertComponent ,canActivate:[AuthGuardService]},\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\n  { path: \"**\", component: AppComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EditComponent,\n    HomeComponent,\n    InsertComponent,\n    NavComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes, { useHash: true }),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    ReactiveFormsModule\n  ],\n  providers: [ShareService],\n  bootstrap: [AppComponent,NavComponent,HeaderComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(protected router: Router, private http: HttpClient) {\n\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n\n    this.http\n      .get(window.location.origin+\"/api/check/\")\n      .toPromise()\n      .then()\n      .catch((error) => {\n        if (error.url.includes(\"Account/Login\") ) {\n          window.location.href = window.location.origin + \"/Account/Login\";\n        }\n      });\n\n    return true;\n  }\n}\n","import { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { Observable } from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Setting } from \"../Setting\";\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.sass']\n})\nexport class EditComponent implements OnInit {\n\n  showSuccess = false;\n  showError = false;\n  VendorControl = new FormControl();\n  newProformaItemId:number;\n  ExchangeRate:number;\n  TotalUsd:number;\n  TotalLira:number;\n  Tax:number;\n  ProformaReportUrl:string;\n  ExitReportUrl:string;  \n  form: FormGroup;\n  uploading: boolean;\n  exitReporting:boolean;\n  generatingPdf:boolean;\n  saving:boolean;  \n  id:string;\n  setting = new Setting();\n  deletemodal = false;  \n\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      fatura: null\n    });\n  }\n\n  ngOnInit() {\n\n    var url = \"/api/Settings/GetSetting/\";    \n    this.id = this.route.snapshot.queryParamMap.get(\"id\");\n    this.http.get<Setting>(url+this.id)\n    .subscribe(p => {\n      this.setting = p;\n    });  \n  }\n  \n\n  Delete(){        \n  }\n\n  Save() {    \n    this.showSuccess = false;\n    var url = \"/api/Settings/UpdateAsync\";\n    \n    this.http\n      .put<Setting>(url, this.setting)\n      .toPromise()\n      .then(res => {        \n        this.showSuccess = true;\n      });\n  }\n\n  Cancel() {\n    this.router.navigateByUrl(\"/home\");\n  }\n  ConfirmDelete() {\n    this.deletemodal = true;\n  }\n  CloseModal() {\n    this.deletemodal = false;\n  }\n}\n","<div class=\"container mb-3\">\n  <div class=\"row ml-1 mr-1 mt-3 mb-5 text-light \">\n    <button class=\"btn bg-secondary  btn-block col-md-3\" [routerLink]=\"['../home']\">\n      back\n    </button>\n  </div>\n  <div class=\"table ml-3\">\n    <div class=\"row\">\n\n\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Key\">Key:</label>\n        <input type=\"text\" class=\"form-control\" name=\"setting.Key\" id=\"setting.Key\" [(ngModel)]=\"setting.Key\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Value\">Value:</label>\n        <textarea class=\"form-control\" rows=\"5\" name=\"setting.Value\" id=\"setting.Value\"\n          [(ngModel)]=\"setting.Value\"></textarea>\n      </div>\n    </div>\n  </div>\n\n  <p class=\"bg-success p-3 mb-2\" *ngIf=\"showSuccess\">Successfully Saved!</p>\n  <div class=\"row\">\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-secondary btn-lg btn-block\" type=\"button\" (click)=\"Cancel()\">\n        Cancel\n      </button>\n    </div>\n    <div class=\"col-md-2 mb-3\">\n      <button type=\"button\" class=\"btn btn-danger btn-lg btn-block\" (click)=\"ConfirmDelete()\">\n        Delete\n      </button>\n    </div>\n\n\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-success btn-lg btn-block\" type=\"button\" value=\"Save\" (click)=\"Save()\">\n        Save\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"saving\"></span>\n      </button>\n    </div>\n  </div>\n</div>\n<!-- Modal -->\n<div *ngIf=\"deletemodal\" class=\"modal-backdrop fade show\"></div>\n<div *ngIf=\"deletemodal\" id=\"exampleModalCenter\" class=\"modal fade show\" tabindex=\"-1\" role=\"dialog\"\n  style=\"display: block; padding-right: 12px;\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Delete</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\" (click)=\"CloseModal()\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        Are you sure?\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"CloseModal()\">No</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"Delete()\">Yes</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ShareService } from \"../share.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit {\n\n  toggleButton= true;\n  constructor(private shareService: ShareService,\n    private http: HttpClient) { \n  }\n\n  ngOnInit() {    \n    this.shareService.changeMessage(this.toggleButton);    \n  }\n\n  toggle()\n  {\n    this.toggleButton = !this.toggleButton;\n    this.shareService.changeMessage(this.toggleButton);    \n  }\n  \n  signOut()\n  {\n    this.http      \n    .post(\"/Account/Logout\",null)\n    .toPromise()\n    .then(res=>{\n      window.location.href = window.location.origin + \"/Account/Login\";\n    }).catch(()=>{\n      window.location.href = window.location.origin + \"/Account/Login\";\n    });\n    \n  }\n\n}\n","<nav class=\"navbar navbar-dark sticky-top flex-md-nowrap p-0 shadow lg-6\" style=\"background-color:#ff6600\">\n\n    <button class=\"navbar-brand btn d-none d-sm-block\" (click)=\"toggle()\">\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-list\" fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\"\n            d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\n        </svg>\n    </button>\n    <a class=\"navbar-brand d-none d-sm-block\" href=\"#\">NewKi</a>    \n    <button class=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" (click)=\"toggle()\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <ul class=\"navbar-nav px-3 mr-0 ml-auto\">\n        <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\">\n            <li class=\"nav-item text-nowrap\">\n                <div>\n                    <button class=\"btn\" type=\"button\" (click)=\"signOut()\">Sign out</button>\n                </div>\n            </li>\n        </form>\n    </ul>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Setting } from \"../Setting\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.sass\"]\n})\nexport class HomeComponent implements OnInit {\n  preventSingleClick = false;\n  timer: any;\n  delay: Number;\n  searchText: string;\n  sortUp = new Array<boolean>();  \n  totalPaid:number;\n  totalDebt:number;\n  Settings= new Array<Setting>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  ngOnInit() {\n    var url = \"/api/Settings/\";\n    this.http\n      .get<Setting[]>(url)\n      .toPromise()\n      .then(res => {\n        this.Settings = res;\n      });\n  }\n\n  Sort(sortHeader:string){        \n  }\n  doubleClick(event) {\n    this.preventSingleClick = true;\n    clearTimeout(this.timer);\n    //Navigate on double click\n    this.router.navigate([\"/edit/\"], {\n      queryParams: { id: event.currentTarget.children[0].innerText }\n    });\n  }\n}\n","<div class=\" box-header with-border\">\n  <input\n    [(ngModel)]=\"searchText\"\n    placeholder=\"search text goes here\"\n    class=\"form-control col-md-3 ml-2 mb-3\"    \n  />\n  <a\n    class=\"btn btn-success btn-md btn-block col-md-1 ml-2 mb-3\"\n    [routerLink]=\"['../insert']\"\n    >Add</a>  \n  <table class=\"table table-striped able-sm mt-2\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th (click)=\"Sort('SettingId')\" scope=\"col\">#</th>\n        <th (click)=\"Sort('Name')\" scope=\"col\">Name</th>\n      </tr>\n    </thead>    \n    <tbody>\n      <tr\n        *ngFor=\"let setting of Settings \"\n        (dblclick)=\"doubleClick($event)\"\n      >\n        <td  scope=\"col\"><a routerLink=\"/edit\" [queryParams]=\"{id: setting.Id}\" > {{setting.Id}}</a></td>\n        <td  scope=\"col\">{{ setting.Key }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <hr/>  \n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Setting } from \"../Setting\";\n\n@Component({\n  selector: 'app-insert',\n  templateUrl: './insert.component.html',\n  styleUrls: ['./insert.component.sass']\n})\nexport class InsertComponent implements OnInit {\n  showSuccess = false;\n  showError = false;\n  VendorControl = new FormControl();\n  newProformaItemId:number;\n  ExchangeRate:number;\n  TotalUsd:number;\n  TotalLira:number;\n  Tax:number;\n  ProformaReportUrl:string;\n  ExitReportUrl:string;  \n  form: FormGroup;\n  uploading: boolean;\n  exitReporting:boolean;\n  generatingPdf:boolean;\n  saving:boolean;  \n  id:string;\n  timer: any;\n  setting = new Setting();\n  deletemodal = false;  \n  preventSingleClick = false;\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n  }\n\n\n  ngOnInit() {\n\n    \n  }\n  \n\n  Delete(){        \n  }\n\n  Save() {   \n    this.showSuccess = false;\n    var url = \"/api/Settings/Insert\";\n    \n    this.http\n      .post<Setting>(url, this.setting)\n      .toPromise()\n      .then(res => {\n        this.showSuccess = true;\n      });\n  }\n\n  Cancel() {\n    this.router.navigateByUrl(\"/home\");\n  }\n  \n}\n","<div class=\"container mb-3\">\n  <div class=\"row ml-1 mr-1 mt-3 mb-5 text-light \">\n    <button class=\"btn bg-secondary  btn-block col-md-3\" [routerLink]=\"['../home']\">\n      back\n    </button>\n  </div>\n  <div class=\"table ml-3\">\n    <div class=\"row\">\n\n\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Key\">Key:</label>\n        <input type=\"text\" class=\"form-control\" name=\"setting.Key\" id=\"setting.Key\"\n          [(ngModel)]=\"setting.Key\"/>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Value\">Value:</label>\n        <textarea class=\"form-control\" rows=\"10\" name=\"setting.Value\" id=\"setting.Value\"\n          [(ngModel)]=\"setting.Value\"></textarea>\n      </div>\n    </div>\n  </div>\n\n  <p class=\"bg-success p-3 mb-2\" *ngIf=\"showSuccess\">Successfully Saved!</p>\n  <div class=\"row\">\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-secondary btn-lg btn-block\" type=\"button\" (click)=\"Cancel()\">\n        Cancel\n      </button>\n    </div>\n\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-success btn-lg btn-block\" type=\"button\" value=\"Save\" (click)=\"Save()\">\n        Save\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"saving\"></span>\n      </button>\n    </div>\n  </div>\n</div>","\nexport class Menu {\n    public Text: string;\n    public Url: string;\n  }\n  ","import { Component, OnInit } from '@angular/core';\nimport {Menu} from './Menu';\nimport { ShareService } from \"../share.service\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.sass']\n})\nexport class NavComponent implements OnInit {\n\n  menus = Array<Menu>();\n\n  toggleMenu = false;\n\n  constructor(private shareService: ShareService,private http: HttpClient,) {\n  }\n\n  ngOnInit() {    \n\n    this.http\n    .get<string[]>(\"/api/nav/\")\n    .toPromise()\n    .then(res => {\n      for(var i=0;i<res.length;i++)\n      {\n        var menu = new Menu();\n        menu.Text = res[i];\n        menu.Url = \"/\"+res[i]+\"/Index/index.html\";        \n        this.menus.push(menu);\n      }\n    })\n    .catch( (error)=>{\n      if(error.status == 200)\n      {          \n        window.location.href = window.location.origin+\"/Account/login\";\n      }\n    });\n\n    this.shareService.currentMessage.subscribe(message=> this.toggleMenu = message);\n\n  }\n\n}\n","<div *ngIf=\"toggleMenu\" class=\"col-md d-md-block  sidebar-sticky sticky-top mt-4 \">\n    <ul class=\"nav flex-column\">\n        <li *ngFor=\"let menu of menus\" class=\"nav-item ml-3 mr-3 mt-1 mb-1\">\n            <a class=\"btn btn-dark w-100 text-left\" href=\"{{menu.Url}}\">\n                {{menu.Text}}\n            </a>\n        </li>\n    </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareService {\n  private messageSource = new BehaviorSubject<boolean>(false);\n  currentMessage = this.messageSource.asObservable();\n\n\n  constructor() { }\n\n  changeMessage(message: boolean) {\n    this.messageSource.next(message)\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}