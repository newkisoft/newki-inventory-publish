{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Setting.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth-guard.service.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/insert/insert.component.ts","webpack:///src/app/insert/insert.component.html","webpack:///src/app/nav/Menu.ts","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/share.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","Setting","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","redirectTo","pathMatch","AppModule","forRoot","useHash","declarations","imports","providers","bootstrap","AuthGuardService","router","http","route","state","get","window","location","origin","toPromise","error","url","includes","href","providedIn","EditComponent","fb","showSuccess","showError","VendorControl","setting","deletemodal","createForm","form","group","name","required","fatura","snapshot","queryParamMap","subscribe","p","put","res","navigateByUrl","Cancel","ConfirmDelete","Save","HeaderComponent","shareService","toggleButton","changeMessage","post","toggle","signOut","HomeComponent","preventSingleClick","sortUp","Array","Settings","sortHeader","event","clearTimeout","timer","navigate","queryParams","currentTarget","children","innerText","Sort","InsertComponent","Menu","NavComponent","menus","toggleMenu","i","length","menu","Text","Url","push","status","currentMessage","message","ShareService","messageSource","asObservable","next","environment","production","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,O;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,0C;AAAA;AAAA;ACPzB;;AACE;;AACE;;AACF;;AACF;;;;;;;;;sEDGaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAeA,QAAMC,SAAS,GAAW,CACxB;AAAEC,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE,kEAA3B;AAAyCC,iBAAW,EAAC,CAAC,oEAAD;AAArD,KADwB,EAExB;AAAEF,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE,kEAA3B;AAAyCC,iBAAW,EAAC,CAAC,oEAAD;AAArD,KAFwB,EAGxB;AAAEF,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,wEAA7B;AAA8CC,iBAAW,EAAC,CAAC,oEAAD;AAA1D,KAHwB,EAIxB;AAAEF,UAAI,EAAE,EAAR;AAAYG,gBAAU,EAAE,OAAxB;AAAiCC,eAAS,EAAE;AAA5C,KAJwB,EAKxB;AAAEJ,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KALwB,CAA1B;;QA8BaI,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ,EAFK,+DAEL,EAFkB,wEAElB;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,2DAAD,C;AAAc,gBAVhB,CACP,uEADO,EAEP,8DAAaC,OAAb,CAAqBP,SAArB,EAAgC;AAAEQ,eAAO,EAAE;AAAX,OAAhC,CAFO,EAGP,sEAHO,EAIP,2DAJO,EAKP,mEALO,CAUgB,EAFvB,mEAEuB;;;;0HAGdF,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,kEAmBkB,EAlBlB,kEAkBkB,EAjBlB,wEAiBkB,EAhBlB,+DAgBkB,EAflB,wEAekB;AAfH,kBAGf,uEAHe,EAGF,6DAHE,EAKf,sEALe,EAMf,2DANe,EAOf,mEAPe,CAeG;AARC,kBAGnB,mEAHmB;AAQD,O;AALC,K;;;;;sEAKVA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,kEAHY,EAIZ,wEAJY,EAKZ,+DALY,EAMZ,wEANY,CADN;AASRC,iBAAO,EAAE,CACP,uEADO,EAEP,8DAAaH,OAAb,CAAqBP,SAArB,EAAgC;AAAEQ,mBAAO,EAAE;AAAX,WAAhC,CAFO,EAGP,sEAHO,EAIP,2DAJO,EAKP,mEALO,CATD;AAgBRhB,iBAAO,EAAE,CACP,mEADO,CAhBD;AAmBRmB,mBAAS,EAAE,CAAC,2DAAD,CAnBH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD,EAAc,+DAAd,EAA2B,wEAA3B;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,gB;;;AAEX,gCAAsBC,MAAtB,EAA8CC,IAA9C,EAAgE;AAAA;;AAA1C,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,IAAA,GAAAA,IAAA;AAE7C;;;;eAED,qBAAYC,KAAZ,EAA2CC,KAA3C,EAAqE;AAEnE,eAAKF,IAAL,CACGG,GADH,CACOC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAuB,aAD9B,EAEGC,SAFH,GAGGpC,IAHH,YAIS,UAACqC,KAAD,EAAW;AAChB,gBAAIA,KAAK,CAACC,GAAN,CAAUC,QAAV,CAAmB,eAAnB,CAAJ,EAA0C;AACxCN,oBAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuBP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,gBAAhD;AACD;AACF,WARH;AAUA,iBAAO,IAAP;AACD;;;;;;;uBAnBUR,gB,EAAgB,8G,EAAA,uH;AAAA,K;;;aAAhBA,gB;AAAgB,eAAhBA,gBAAgB,K;AAAA,kBAFf;;;;;sEAEDA,gB,EAAgB;cAH5B,wDAG4B;eAHjB;AACVc,oBAAU,EAAE;AADF,S;AAGiB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACR7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0BE;;AAAmD;;AAAmB;;;;;;AAiBhE;;;;;;AAMR;;;;;;;;AACA;;AAEE;;AACE;;AACE;;AACE;;AAAwB;;AAAM;;AAC9B;;AACE;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAO;;AACzD;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAqE;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAE;;AAC9F;;AAA6C;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AAAG;;AACrE;;AACF;;AACF;;AACF;;;;;;;;QDtDaC,a;;;AAsBX,6BACUb,IADV,EAEUC,KAFV,EAGUF,MAHV,EAIUe,EAJV,EAIyB;AAAA;;AAHf,aAAAd,IAAA,GAAAA,IAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAF,MAAA,GAAAA,MAAA;AACA,aAAAe,EAAA,GAAAA,EAAA;AAxBV,aAAAC,WAAA,GAAc,KAAd;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAcA,aAAAC,OAAA,GAAU,IAAI,gDAAJ,EAAV;AACA,aAAAC,WAAA,GAAc,KAAd;AASE,aAAKC,UAAL;AACD;;;;eAED,sBAAa;AACX,eAAKC,IAAL,GAAY,KAAKP,EAAL,CAAQQ,KAAR,CAAc;AACxBC,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CADkB;AAExBC,kBAAM,EAAE;AAFgB,WAAd,CAAZ;AAID;;;eAED,oBAAW;AAAA;;AAET,cAAIhB,GAAG,GAAG,2BAAV;AACA,eAAK/B,EAAL,GAAU,KAAKuB,KAAL,CAAWyB,QAAX,CAAoBC,aAApB,CAAkCxB,GAAlC,CAAsC,IAAtC,CAAV;AACA,eAAKH,IAAL,CAAUG,GAAV,CAAuBM,GAAG,GAAC,KAAK/B,EAAhC,EACCkD,SADD,CACW,UAAAC,CAAC,EAAI;AACd,iBAAI,CAACX,OAAL,GAAeW,CAAf;AACD,WAHD;AAID;;;eAGD,kBAAM,CACL;;;eAED,gBAAO;AAAA;;AACL,eAAKd,WAAL,GAAmB,KAAnB;AACA,cAAIN,GAAG,GAAG,2BAAV;AAEA,eAAKT,IAAL,CACG8B,GADH,CACgBrB,GADhB,EACqB,KAAKS,OAD1B,EAEGX,SAFH,GAGGpC,IAHH,CAGQ,UAAA4D,GAAG,EAAI;AACX,kBAAI,CAAChB,WAAL,GAAmB,IAAnB;AACD,WALH;AAMD;;;eAED,kBAAS;AACP,eAAKhB,MAAL,CAAYiC,aAAZ,CAA0B,OAA1B;AACD;;;eACD,yBAAgB;AACd,eAAKb,WAAL,GAAmB,IAAnB;AACD;;;eACD,sBAAa;AACX,eAAKA,WAAL,GAAmB,KAAnB;AACD;;;;;;;uBAxEUN,a,EAAa,gI,EAAA,+H,EAAA,uH,EAAA,2H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,o0D;AAAA;AAAA;ACf1B;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAIA;;AACE;;AACE;;AAAyB;;AAAI;;AAC7B;;AAA4E;AAAA;AAAA;;AAA5E;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAM;;AACjC;;AACE;AAAA;AAAA;;AAA4B;;AAChC;;AACF;;AACF;;AAEA;;AACA;;AACE;;AACE;;AAAiE;AAAA,mBAAS,IAAAoB,MAAA,EAAT;AAAiB,WAAjB;;AAC/D;;AACF;;AACF;;AACA;;AACE;;AAA8D;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AAC5D;;AACF;;AACF;;AAGA;;AACE;;AAA4E;AAAA,mBAAS,IAAAC,IAAA,EAAT;AAAe,WAAf;;AAC1E;;AACA;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACA;;;;AAhDyD;;AAAA;;AAY2B;;AAAA;;AAO1E;;AAAA;;AAKuB;;AAAA;;AAiBuD;;AAAA;;AAMnF;;AAAA;;AACA;;AAAA;;;;;;;;;sEDnCQtB,a,EAAa;cALzB,uDAKyB;eALf;AACT/B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaoD,e;;;AAGX,+BAAoBC,YAApB,EACUrC,IADV,EAC4B;AAAA;;AADR,aAAAqC,YAAA,GAAAA,YAAA;AACV,aAAArC,IAAA,GAAAA,IAAA;AAFV,aAAAsC,YAAA,GAAc,IAAd;AAGC;;;;eAED,oBAAW;AACT,eAAKD,YAAL,CAAkBE,aAAlB,CAAgC,KAAKD,YAArC;AACD;;;eAED,kBAAM;AAEJ,eAAKA,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACA,eAAKD,YAAL,CAAkBE,aAAlB,CAAgC,KAAKD,YAArC;AACD;;;eAED,mBAAO;AAEL,eAAKtC,IAAL,CACCwC,IADD,CACM,iBADN,EACwB,IADxB,EAECjC,SAFD,GAGCpC,IAHD,CAGM,UAAA4D,GAAG,EAAE;AACT3B,kBAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuBP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,gBAAhD;AACD,WALD,WAKS,YAAI;AACXF,kBAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuBP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,gBAAhD;AACD,WAPD;AASD;;;;;;;uBA5BU8B,e,EAAe,4H,EAAA,gI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,w8B;AAAA;AAAA;ACT5B;;AAEI;;AAAmD;AAAA,mBAAS,IAAAK,MAAA,EAAT;AAAiB,WAAjB;;AAC/C;;AAAA;;AAEI;;AAEJ;;AACJ;;AACA;;AAAA;;AAAmD;;AAAK;;AACxD;;AAAmF;AAAA,mBAAS,IAAAA,MAAA,EAAT;AAAiB,WAAjB;;AAC/E;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AAAkC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAQ;;AAClE;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDbaN,e,EAAe;cAL3B,uDAK2B;eALjB;AACTtD,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;ACkBM;;AAEE;AAAA;;AAAA;;AAAA;AAAA;;AAEA;;AAAiB;;AAAyD;;AAAc;;AAAI;;AAC5F;;AAAiB;;AAAiB;;AACpC;;;;;;AAFyC;;AAAA;;AAAmC;;AAAA;;AACzD;;AAAA;;;;;;;;QDbZ2D,a;;;AAUX,6BAAoB3C,IAApB,EAA8CD,MAA9C,EAA8D;AAAA;;AAA1C,aAAAC,IAAA,GAAAA,IAAA;AAA0B,aAAAD,MAAA,GAAAA,MAAA;AAT9C,aAAA6C,kBAAA,GAAqB,KAArB;AAIA,aAAAC,MAAA,GAAS,IAAIC,KAAJ,EAAT;AAGA,aAAAC,QAAA,GAAU,IAAID,KAAJ,EAAV;AAEgE;;;;eAEhE,oBAAW;AAAA;;AACT,cAAIrC,GAAG,GAAG,gBAAV;AACA,eAAKT,IAAL,CACGG,GADH,CACkBM,GADlB,EAEGF,SAFH,GAGGpC,IAHH,CAGQ,UAAA4D,GAAG,EAAI;AACX,kBAAI,CAACgB,QAAL,GAAgBhB,GAAhB;AACD,WALH;AAMD;;;eAED,cAAKiB,UAAL,EAAsB,CACrB;;;eACD,qBAAYC,KAAZ,EAAmB;AACjB,eAAKL,kBAAL,GAA0B,IAA1B;AACAM,sBAAY,CAAC,KAAKC,KAAN,CAAZ,CAFiB,CAGjB;;AACA,eAAKpD,MAAL,CAAYqD,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAC/BC,uBAAW,EAAE;AAAE3E,gBAAE,EAAEuE,KAAK,CAACK,aAAN,CAAoBC,QAApB,CAA6B,CAA7B,EAAgCC;AAAtC;AADkB,WAAjC;AAGD;;;;;;;uBA/BUb,a,EAAa,gI,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,ge;AAAA;AAAA;ACV1B;;AACE;;AACE;AAAA;AAAA;;AADF;;AAKA;;AAGG;;AAAG;;AACN;;AACE;;AACE;;AACE;;AAAI;AAAA,mBAAS,IAAAc,IAAA,CAAK,WAAL,CAAT;AAA0B,WAA1B;;AAAwC;;AAAC;;AAC7C;;AAAI;AAAA,mBAAS,IAAAA,IAAA,CAAK,MAAL,CAAT;AAAqB,WAArB;;AAAmC;;AAAI;;AAC7C;;AACF;;AACA;;AACE;;AAOF;;AACF;;AACA;;AACF;;;;AA1BI;;AAAA;;AAMA;;AAAA;;AAWI;;AAAA;;;;;;;;;sEDTKd,a,EAAa;cALzB,uDAKyB;eALf;AACT7D,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC2BE;;AAAmD;;AAAmB;;;;;;AAWhE;;;;;;;;QDxBK0E,e;;;AAsBX,+BACU1D,IADV,EAEUC,KAFV,EAGUF,MAHV,EAIUe,EAJV,EAIyB;AAAA;;AAHf,aAAAd,IAAA,GAAAA,IAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAF,MAAA,GAAAA,MAAA;AACA,aAAAe,EAAA,GAAAA,EAAA;AAzBV,aAAAC,WAAA,GAAc,KAAd;AACA,aAAAC,SAAA,GAAY,KAAZ;AACA,aAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAeA,aAAAC,OAAA,GAAU,IAAI,gDAAJ,EAAV;AACA,aAAAC,WAAA,GAAc,KAAd;AACA,aAAAyB,kBAAA,GAAqB,KAArB;AAQC;;;;eAGD,oBAAW,CAGV;;;eAGD,kBAAM,CACL;;;eAED,gBAAO;AAAA;;AACL,eAAK7B,WAAL,GAAmB,KAAnB;AACA,cAAIN,GAAG,GAAG,sBAAV;AAEA,eAAKT,IAAL,CACGwC,IADH,CACiB/B,GADjB,EACsB,KAAKS,OAD3B,EAEGX,SAFH,GAGGpC,IAHH,CAGQ,UAAA4D,GAAG,EAAI;AACX,kBAAI,CAAChB,WAAL,GAAmB,IAAnB;AACD,WALH;AAMD;;;eAED,kBAAS;AACP,eAAKhB,MAAL,CAAYiC,aAAZ,CAA0B,OAA1B;AACD;;;;;;;uBAtDU0B,e,EAAe,gI,EAAA,+H,EAAA,uH,EAAA,2H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,28B;AAAA;AAAA;ACd5B;;AACE;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAIA;;AACE;;AACE;;AAAyB;;AAAI;;AAC7B;;AACE;AAAA;AAAA;;AADF;;AAEF;;AACF;;AACA;;AACE;;AACE;;AAA2B;;AAAM;;AACjC;;AACE;AAAA;AAAA;;AAA4B;;AAChC;;AACF;;AACF;;AAEA;;AACA;;AACE;;AACE;;AAAiE;AAAA,mBAAS,IAAAzB,MAAA,EAAT;AAAiB,WAAjB;;AAC/D;;AACF;;AACF;;AAEA;;AACE;;AAA4E;AAAA,mBAAS,IAAAE,IAAA,EAAT;AAAe,WAAf;;AAC1E;;AACA;;AACF;;AACF;;AACF;;AACF;;;;AAxCyD;;AAAA;;AAa/C;;AAAA;;AAOA;;AAAA;;AAKuB;;AAAA;;AAWuD;;AAAA;;;;;;;;;sEDxB3EuB,e,EAAe;cAL3B,uDAK2B;eALjB;AACT5E,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEb5B;AAAA;;;AAAA;AAAA;AAAA;;QAAa2E,I;;;;;;;;;;;;;;;;;;;ACDb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEQ;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAH4C;;AAAA;;AACpC;;AAAA;;;;;;AAJhB;;AACI;;AACI;;AAKJ;;AACJ;;;;;;AANY;;AAAA;;;;QDQCC,Y;;;AAMX,4BAAoBvB,YAApB,EAAuDrC,IAAvD,EAAuE;AAAA;;AAAnD,aAAAqC,YAAA,GAAAA,YAAA;AAAmC,aAAArC,IAAA,GAAAA,IAAA;AAJvD,aAAA6D,KAAA,GAAQf,KAAK,EAAb;AAEA,aAAAgB,UAAA,GAAa,KAAb;AAGC;;;;eAED,oBAAW;AAAA;;AAET,eAAK9D,IAAL,CACCG,GADD,CACe,WADf,EAECI,SAFD,GAGCpC,IAHD,CAGM,UAAA4D,GAAG,EAAI;AACX,iBAAI,IAAIgC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAChC,GAAG,CAACiC,MAAlB,EAAyBD,CAAC,EAA1B,EACA;AACE,kBAAIE,IAAI,GAAG,IAAI,0CAAJ,EAAX;AACAA,kBAAI,CAACC,IAAL,GAAYnC,GAAG,CAACgC,CAAD,CAAf;AACAE,kBAAI,CAACE,GAAL,GAAW,MAAIpC,GAAG,CAACgC,CAAD,CAAP,GAAW,mBAAtB;;AACA,oBAAI,CAACF,KAAL,CAAWO,IAAX,CAAgBH,IAAhB;AACD;AACF,WAXD,WAYQ,UAACzD,KAAD,EAAS;AACf,gBAAGA,KAAK,CAAC6D,MAAN,IAAgB,GAAnB,EACA;AACEjE,oBAAM,CAACC,QAAP,CAAgBM,IAAhB,GAAuBP,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAuB,gBAA9C;AACD;AACF,WAjBD;AAmBA,eAAK+B,YAAL,CAAkBiC,cAAlB,CAAiC1C,SAAjC,CAA2C,UAAA2C,OAAO;AAAA,mBAAG,MAAI,CAACT,UAAL,GAAkBS,OAArB;AAAA,WAAlD;AAED;;;;;;;uBAhCUX,Y,EAAY,4H,EAAA,gI;AAAA,K;;;YAAZA,Y;AAAY,8B;AAAA,c;AAAA,a;AAAA,sW;AAAA;AAAA;ACVzB;;;;AAAK;;;;;;;;;sEDUQA,Y,EAAY;cALxB,uDAKwB;eALd;AACT9E,kBAAQ,EAAE,SADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;;;AEVzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMawF,Y;;;AAKX,8BAAc;AAAA;;AAJN,aAAAC,aAAA,GAAgB,IAAI,oDAAJ,CAA6B,KAA7B,CAAhB;AACR,aAAAH,cAAA,GAAiB,KAAKG,aAAL,CAAmBC,YAAnB,EAAjB;AAGiB;;;;eAEjB,uBAAcH,OAAd,EAAgC;AAC9B,eAAKE,aAAL,CAAmBE,IAAnB,CAAwBJ,OAAxB;AACD;;;;;;;uBATUC,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACV5D,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;ACNzB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMgE,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACxE,KAAR,CAAcuE,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class Setting{\n    Id:number;\n    Key:string;\n    Value:string;\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Settings';\n}\n","<section class=\"content\">\n  <div class=\"box\">\n    <router-outlet></router-outlet>\n  </div>\n</section>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HomeComponent } from \"./home/home.component\";\nimport { InsertComponent } from \"./insert/insert.component\";\nimport { EditComponent } from \"./edit/edit.component\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ShareService } from \"./share.service\";\nimport { NavComponent } from \"./nav/nav.component\";\nimport { HeaderComponent } from \"./header/header.component\";\nimport { AuthGuardService } from \"./auth-guard.service\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nconst appRoutes: Routes = [\n  { path: \"home\", component: HomeComponent,canActivate:[AuthGuardService]},\n  { path: \"edit\", component: EditComponent,canActivate:[AuthGuardService]},\n  { path: \"insert\", component: InsertComponent ,canActivate:[AuthGuardService]},\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\n  { path: \"**\", component: AppComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EditComponent,\n    HomeComponent,\n    InsertComponent,\n    NavComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes, { useHash: true }),\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  exports: [\n    ReactiveFormsModule\n  ],\n  providers: [ShareService],\n  bootstrap: [AppComponent,NavComponent,HeaderComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(protected router: Router, private http: HttpClient) {\n\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\n\n    this.http\n      .get(window.location.origin+\"/api/check/\")\n      .toPromise()\n      .then()\n      .catch((error) => {\n        if (error.url.includes(\"Account/Login\") ) {\n          window.location.href = window.location.origin + \"/Account/Login\";\n        }\n      });\n\n    return true;\n  }\n}\n","import { Component, OnInit, ElementRef, ViewChild } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\n\nimport { Observable } from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Setting } from \"../Setting\";\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.sass']\n})\nexport class EditComponent implements OnInit {\n\n  showSuccess = false;\n  showError = false;\n  VendorControl = new FormControl();\n  newProformaItemId:number;\n  ExchangeRate:number;\n  TotalUsd:number;\n  TotalLira:number;\n  Tax:number;\n  ProformaReportUrl:string;\n  ExitReportUrl:string;  \n  form: FormGroup;\n  uploading: boolean;\n  exitReporting:boolean;\n  generatingPdf:boolean;\n  saving:boolean;  \n  id:string;\n  setting = new Setting();\n  deletemodal = false;  \n\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.form = this.fb.group({\n      name: ['', Validators.required],\n      fatura: null\n    });\n  }\n\n  ngOnInit() {\n\n    var url = \"/api/Settings/GetSetting/\";    \n    this.id = this.route.snapshot.queryParamMap.get(\"id\");\n    this.http.get<Setting>(url+this.id)\n    .subscribe(p => {\n      this.setting = p;\n    });  \n  }\n  \n\n  Delete(){        \n  }\n\n  Save() {    \n    this.showSuccess = false;\n    var url = \"/api/Settings/UpdateAsync\";\n    \n    this.http\n      .put<Setting>(url, this.setting)\n      .toPromise()\n      .then(res => {        \n        this.showSuccess = true;\n      });\n  }\n\n  Cancel() {\n    this.router.navigateByUrl(\"/home\");\n  }\n  ConfirmDelete() {\n    this.deletemodal = true;\n  }\n  CloseModal() {\n    this.deletemodal = false;\n  }\n}\n","<div class=\"container mb-3\">\n  <div class=\"row ml-1 mr-1 mt-3 mb-5 text-light \">\n    <button class=\"btn bg-secondary  btn-block col-md-3\" [routerLink]=\"['../home']\">\n      back\n    </button>\n  </div>\n  <div class=\"table ml-3\">\n    <div class=\"row\">\n\n\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Key\">Key:</label>\n        <input type=\"text\" class=\"form-control\" name=\"setting.Key\" id=\"setting.Key\" [(ngModel)]=\"setting.Key\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Value\">Value:</label>\n        <textarea class=\"form-control\" rows=\"5\" name=\"setting.Value\" id=\"setting.Value\"\n          [(ngModel)]=\"setting.Value\"></textarea>\n      </div>\n    </div>\n  </div>\n\n  <p class=\"bg-success p-3 mb-2\" *ngIf=\"showSuccess\">Successfully Saved!</p>\n  <div class=\"row\">\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-secondary btn-lg btn-block\" type=\"button\" (click)=\"Cancel()\">\n        Cancel\n      </button>\n    </div>\n    <div class=\"col-md-2 mb-3\">\n      <button type=\"button\" class=\"btn btn-danger btn-lg btn-block\" (click)=\"ConfirmDelete()\">\n        Delete\n      </button>\n    </div>\n\n\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-success btn-lg btn-block\" type=\"button\" value=\"Save\" (click)=\"Save()\">\n        Save\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"saving\"></span>\n      </button>\n    </div>\n  </div>\n</div>\n<!-- Modal -->\n<div *ngIf=\"deletemodal\" class=\"modal-backdrop fade show\"></div>\n<div *ngIf=\"deletemodal\" id=\"exampleModalCenter\" class=\"modal fade show\" tabindex=\"-1\" role=\"dialog\"\n  style=\"display: block; padding-right: 12px;\">\n  <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Delete</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\" (click)=\"CloseModal()\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        Are you sure?\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"CloseModal()\">No</button>\n        <button type=\"button\" class=\"btn btn-danger\" (click)=\"Delete()\">Yes</button>\n      </div>\n    </div>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ShareService } from \"../share.service\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.sass']\n})\nexport class HeaderComponent implements OnInit {\n\n  toggleButton= true;\n  constructor(private shareService: ShareService,\n    private http: HttpClient) { \n  }\n\n  ngOnInit() {    \n    this.shareService.changeMessage(this.toggleButton);    \n  }\n\n  toggle()\n  {\n    this.toggleButton = !this.toggleButton;\n    this.shareService.changeMessage(this.toggleButton);    \n  }\n  \n  signOut()\n  {\n    this.http      \n    .post(\"/Account/Logout\",null)\n    .toPromise()\n    .then(res=>{\n      window.location.href = window.location.origin + \"/Account/Login\";\n    }).catch(()=>{\n      window.location.href = window.location.origin + \"/Account/Login\";\n    });\n    \n  }\n\n}\n","<nav class=\"navbar navbar-dark sticky-top flex-md-nowrap p-0 shadow lg-6\" style=\"background-color:#ff6600\">\n\n    <button class=\"navbar-brand btn d-none d-sm-block\" (click)=\"toggle()\">\n        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" class=\"bi bi-list\" fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\"\n            d=\"M2.5 11.5A.5.5 0 0 1 3 11h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 7h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5zm0-4A.5.5 0 0 1 3 3h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5z\" />\n        </svg>\n    </button>\n    <a class=\"navbar-brand d-none d-sm-block\" href=\"#\">NewKi</a>    \n    <button class=\"navbar-toggler position-absolute d-md-none collapsed\" type=\"button\" (click)=\"toggle()\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <ul class=\"navbar-nav px-3 mr-0 ml-auto\">\n        <form asp-area=\"\" asp-controller=\"Account\" asp-action=\"Logout\" method=\"post\" id=\"logoutForm\">\n            <li class=\"nav-item text-nowrap\">\n                <div>\n                    <button class=\"btn\" type=\"button\" (click)=\"signOut()\">Sign out</button>\n                </div>\n            </li>\n        </form>\n    </ul>\n</nav>\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Setting } from \"../Setting\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.sass\"]\n})\nexport class HomeComponent implements OnInit {\n  preventSingleClick = false;\n  timer: any;\n  delay: Number;\n  searchText: string;\n  sortUp = new Array<boolean>();  \n  totalPaid:number;\n  totalDebt:number;\n  Settings= new Array<Setting>();\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  ngOnInit() {\n    var url = \"/api/Settings/\";\n    this.http\n      .get<Setting[]>(url)\n      .toPromise()\n      .then(res => {\n        this.Settings = res;\n      });\n  }\n\n  Sort(sortHeader:string){        \n  }\n  doubleClick(event) {\n    this.preventSingleClick = true;\n    clearTimeout(this.timer);\n    //Navigate on double click\n    this.router.navigate([\"/edit/\"], {\n      queryParams: { id: event.currentTarget.children[0].innerText }\n    });\n  }\n}\n","<div class=\" box-header with-border\">\n  <input\n    [(ngModel)]=\"searchText\"\n    placeholder=\"search text goes here\"\n    class=\"form-control col-md-3 ml-2 mb-3\"    \n  />\n  <a\n    class=\"btn btn-success btn-md btn-block col-md-1 ml-2 mb-3\"\n    [routerLink]=\"['../insert']\"\n    >Add</a>  \n  <table class=\"table table-striped able-sm mt-2\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th (click)=\"Sort('SettingId')\" scope=\"col\">#</th>\n        <th (click)=\"Sort('Name')\" scope=\"col\">Name</th>\n      </tr>\n    </thead>    \n    <tbody>\n      <tr\n        *ngFor=\"let setting of Settings \"\n        (dblclick)=\"doubleClick($event)\"\n      >\n        <td  scope=\"col\"><a routerLink=\"/edit\" [queryParams]=\"{id: setting.Id}\" > {{setting.Id}}</a></td>\n        <td  scope=\"col\">{{ setting.Key }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <hr/>  \n</div>\n","import { Component, OnInit } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport { Setting } from \"../Setting\";\n\n@Component({\n  selector: 'app-insert',\n  templateUrl: './insert.component.html',\n  styleUrls: ['./insert.component.sass']\n})\nexport class InsertComponent implements OnInit {\n  showSuccess = false;\n  showError = false;\n  VendorControl = new FormControl();\n  newProformaItemId:number;\n  ExchangeRate:number;\n  TotalUsd:number;\n  TotalLira:number;\n  Tax:number;\n  ProformaReportUrl:string;\n  ExitReportUrl:string;  \n  form: FormGroup;\n  uploading: boolean;\n  exitReporting:boolean;\n  generatingPdf:boolean;\n  saving:boolean;  \n  id:string;\n  timer: any;\n  setting = new Setting();\n  deletemodal = false;  \n  preventSingleClick = false;\n\n  constructor(\n    private http: HttpClient,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n  }\n\n\n  ngOnInit() {\n\n    \n  }\n  \n\n  Delete(){        \n  }\n\n  Save() {   \n    this.showSuccess = false;\n    var url = \"/api/Settings/Insert\";\n    \n    this.http\n      .post<Setting>(url, this.setting)\n      .toPromise()\n      .then(res => {\n        this.showSuccess = true;\n      });\n  }\n\n  Cancel() {\n    this.router.navigateByUrl(\"/home\");\n  }\n  \n}\n","<div class=\"container mb-3\">\n  <div class=\"row ml-1 mr-1 mt-3 mb-5 text-light \">\n    <button class=\"btn bg-secondary  btn-block col-md-3\" [routerLink]=\"['../home']\">\n      back\n    </button>\n  </div>\n  <div class=\"table ml-3\">\n    <div class=\"row\">\n\n\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Key\">Key:</label>\n        <input type=\"text\" class=\"form-control\" name=\"setting.Key\" id=\"setting.Key\"\n          [(ngModel)]=\"setting.Key\"/>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"form-group col\">\n        <label for=\"setting.Value\">Value:</label>\n        <textarea class=\"form-control\" rows=\"10\" name=\"setting.Value\" id=\"setting.Value\"\n          [(ngModel)]=\"setting.Value\"></textarea>\n      </div>\n    </div>\n  </div>\n\n  <p class=\"bg-success p-3 mb-2\" *ngIf=\"showSuccess\">Successfully Saved!</p>\n  <div class=\"row\">\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-secondary btn-lg btn-block\" type=\"button\" (click)=\"Cancel()\">\n        Cancel\n      </button>\n    </div>\n\n    <div class=\"col-md-2 mb-3\">\n      <button class=\"btn btn-success btn-lg btn-block\" type=\"button\" value=\"Save\" (click)=\"Save()\">\n        Save\n        <span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\" *ngIf=\"saving\"></span>\n      </button>\n    </div>\n  </div>\n</div>","\nexport class Menu {\n    public Text: string;\n    public Url: string;\n  }\n  ","import { Component, OnInit } from '@angular/core';\nimport {Menu} from './Menu';\nimport { ShareService } from \"../share.service\";\nimport { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.sass']\n})\nexport class NavComponent implements OnInit {\n\n  menus = Array<Menu>();\n\n  toggleMenu = false;\n\n  constructor(private shareService: ShareService,private http: HttpClient,) {\n  }\n\n  ngOnInit() {    \n\n    this.http\n    .get<string[]>(\"/api/nav/\")\n    .toPromise()\n    .then(res => {\n      for(var i=0;i<res.length;i++)\n      {\n        var menu = new Menu();\n        menu.Text = res[i];\n        menu.Url = \"/\"+res[i]+\"/Index/index.html\";        \n        this.menus.push(menu);\n      }\n    })\n    .catch( (error)=>{\n      if(error.status == 200)\n      {          \n        window.location.href = window.location.origin+\"/Account/login\";\n      }\n    });\n\n    this.shareService.currentMessage.subscribe(message=> this.toggleMenu = message);\n\n  }\n\n}\n","<div *ngIf=\"toggleMenu\" class=\"col-md d-md-block  sidebar-sticky sticky-top mt-4 \">\n    <ul class=\"nav flex-column\">\n        <li *ngFor=\"let menu of menus\" class=\"nav-item ml-3 mr-3 mt-1 mb-1\">\n            <a class=\"btn btn-dark w-100 text-left\" href=\"{{menu.Url}}\">\n                {{menu.Text}}\n            </a>\n        </li>\n    </ul>\n</div>\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShareService {\n  private messageSource = new BehaviorSubject<boolean>(false);\n  currentMessage = this.messageSource.asObservable();\n\n\n  constructor() { }\n\n  changeMessage(message: boolean) {\n    this.messageSource.next(message)\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}